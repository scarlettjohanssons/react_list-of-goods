{"version":3,"sources":["Goods.jsx","App.js","index.js"],"names":["Goods","state","isReversed","isSorted","goodLength","reversed","setState","prev","sortAlphabetically","sortByLength","reset","changeList","target","value","this","goodsList","props","goods","filter","good","length","sort","first","second","localeCompare","reverse","type","onClick","onChange","Array","fill","map","x","i","key","Math","floor","random","React","Component","goodsFromServer","App","showBtn","showList","className","ReactDOM","render","document","getElementById"],"mappings":"6NAGaA,G,MAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAU,GACVC,WAAY,GAJhB,EAOEC,SAAW,WACT,EAAKC,UAAS,SAAAC,GAAI,MAAK,CACrBL,YAAaK,EAAKL,gBATxB,EAaEM,mBAAqB,WACnB,EAAKF,UAAS,SAAAC,GAAI,MAAK,CACrBJ,SAAU,gBAfhB,EAmBEM,aAAe,WACb,EAAKH,SAAS,CACZH,SAAU,YArBhB,EAyBEO,MAAQ,WACN,EAAKJ,SAAS,CACZJ,YAAY,EACZC,SAAU,GACVC,WAAY,KA7BlB,EAiCEO,WAAa,YAAiB,IAAdC,EAAa,EAAbA,OACd,EAAKN,SAAS,CACZF,WAAYQ,EAAOC,SAnCzB,4CAuCE,WACE,MAA6CC,KAAKb,MAA1CC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAAUC,EAA9B,EAA8BA,WACxBW,EAAYD,KAAKE,MAAMC,MAAMC,QACjC,SAAAC,GAAI,OAAIA,EAAKC,QAAUhB,KAmBzB,OAhBAW,EAAUM,MAAK,SAACC,EAAOC,GACrB,OAAQpB,GACN,IAAK,WACH,OAAOmB,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMF,OAASG,EAAOH,OAE/B,QACE,OAAO,MAITlB,GACFa,EAAUU,UAIV,oCACE,4BACEC,KAAK,SACLC,QAASb,KAAKT,UAFhB,WAMA,4BACEqB,KAAK,SACLC,QAASb,KAAKN,oBAFhB,uBAMA,4BACEkB,KAAK,SACLC,QAASb,KAAKJ,OAFhB,SAMA,4BACEgB,KAAK,SACLC,QAASb,KAAKL,cAFhB,kBAMA,4BACEI,MAAOT,EACPwB,SAAUd,KAAKH,YAEdkB,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OACrB,4BACEC,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrBxB,MAAOoB,EAAI,GAEVA,EAAI,OAIX,4BACGlB,EAAUgB,KAAI,SAAAZ,GAAI,OACjB,wBAAIe,IAAKf,GAAOA,YAtG5B,GAA2BmB,IAAMC,YCC3BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4CaC,E,4MAxCbxC,MAAQ,CACNyC,SAAS,G,EAGXC,SAAW,WACT,EAAKrC,SAAS,CACZoC,SAAS,K,4CAIb,WACE,OACE,oCACE,yBAAKE,UAAU,OACZ9B,KAAKb,MAAMyC,SAEV,4BACEhB,KAAK,SACLkB,UAAU,MACVjB,QAASb,KAAK6B,UAHhB,UAWH7B,KAAKb,MAAMyC,SAEV,6BACE,kBAAC,EAAD,CAAOzB,MAAOuB,U,GA/BRF,IAAMC,WCbxBM,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.7c2f587a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Goods extends React.Component {\n  state = {\n    isReversed: false,\n    isSorted: '',\n    goodLength: 1,\n  };\n\n  reversed = () => {\n    this.setState(prev => ({\n      isReversed: !prev.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState(prev => ({\n      isSorted: 'alphabet',\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState({\n      isSorted: 'length',\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      isSorted: '',\n      goodLength: 1,\n    });\n  };\n\n  changeList = ({ target }) => {\n    this.setState({\n      goodLength: target.value,\n    });\n  }\n\n  render() {\n    const { isReversed, isSorted, goodLength } = this.state;\n    const goodsList = this.props.goods.filter(\n      good => good.length >= goodLength,\n    );\n\n    goodsList.sort((first, second) => {\n      switch (isSorted) {\n        case 'alphabet':\n          return first.localeCompare(second);\n        case 'length':\n          return first.length - second.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      goodsList.reverse();\n    }\n\n    return (\n      <>\n        <button\n          type=\"button\"\n          onClick={this.reversed}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.reset}\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortByLength}\n        >\n          Sort by length\n        </button>\n        <select\n          value={goodLength}\n          onChange={this.changeList}\n        >\n          {Array(10).fill(0).map((x, i) => (\n            <option\n              key={Math.floor(Math.random() * 100000)}\n              value={i + 1}\n            >\n              {i + 1}\n            </option>\n          ))}\n        </select>\n        <ul>\n          {goodsList.map(good => (\n            <li key={good}>{good}</li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nGoods.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Goods } from './Goods';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    showBtn: true,\n  }\n\n  showList = () => {\n    this.setState({\n      showBtn: false,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          {this.state.showBtn\n            && (\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={this.showList}\n            >\n              Start\n            </button>\n            )\n          }\n        </div>\n\n        {this.state.showBtn\n          || (\n          <div>\n            <Goods goods={goodsFromServer} />\n          </div>\n          )\n        }\n\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}