{"version":3,"sources":["Goods.jsx","App.js","index.js"],"names":["Goods","state","goods","props","isReversed","isSorted","goodLength","reversed","setState","prev","sortAlphabetically","sortByLength","reset","changeList","target","value","this","goodsList","filter","good","length","sort","first","second","localeCompare","reverse","type","onClick","onChange","Array","fill","map","x","i","key","Math","floor","random","React","Component","goodsFromServer","App","show","showBtn","showList","className","ReactDOM","render","document","getElementById"],"mappings":"4OAGaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,YAAK,EAAKC,MAAMD,OACtBE,YAAY,EACZC,SAAU,GACVC,WAAY,GALhB,EAQEC,SAAW,WACT,EAAKC,UAAS,SAAAC,GAAI,MAAK,CACrBL,YAAaK,EAAKL,gBAVxB,EAcEM,mBAAqB,WACnB,EAAKF,UAAS,SAAAC,GAAI,MAAK,CACrBJ,SAAU,gBAhBhB,EAoBEM,aAAe,WACb,EAAKH,SAAS,CACZH,SAAU,YAtBhB,EA0BEO,MAAQ,WACN,EAAKJ,SAAS,CACZJ,YAAY,EACZC,SAAU,GACVC,WAAY,KA9BlB,EAkCEO,WAAa,YAAiB,IAAdC,EAAa,EAAbA,OACd,EAAKN,SAAS,CACZF,WAAYQ,EAAOC,SApCzB,4CAwCE,WACE,MAAoDC,KAAKf,MAAjDC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,SAAUC,EAArC,EAAqCA,WAC/BW,EAAYf,EAAMgB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUd,KAkBtD,OAhBAW,EAAUI,MAAK,SAACC,EAAOC,GACrB,OAAQlB,GACN,IAAK,WACH,OAAOiB,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMF,OAASG,EAAOH,OAE/B,QACE,OAAO,MAIThB,GACFa,EAAUQ,UAIV,oCACE,4BACEC,KAAK,SACLC,QAASX,KAAKT,UAFhB,WAMA,4BACEmB,KAAK,SACLC,QAASX,KAAKN,oBAFhB,uBAMA,4BACEgB,KAAK,SACLC,QAASX,KAAKJ,OAFhB,SAMA,4BACEc,KAAK,SACLC,QAASX,KAAKL,cAFhB,kBAMA,4BACEI,MAAOT,EACPsB,SAAUZ,KAAKH,YAEdgB,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OACrB,4BACEC,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrBtB,MAAOkB,EAAI,GAEVA,EAAI,OAIX,4BACGhB,EAAUc,KAAI,SAAAZ,GAAI,OACjB,wBAAIe,IAAKf,GAAOA,YArG5B,GAA2BmB,IAAMC,WCC3BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA+CaC,E,4MA3CbxC,MAAQ,CACNgB,UAAU,GAAD,OAAMuB,GACfE,MAAM,EACNC,SAAS,G,EAGXC,SAAW,WACT,EAAKpC,UAAS,SAAAC,GAAI,MAAK,CACrBiC,MAAOjC,EAAKiC,KACZC,SAAS,O,4CAIb,WACE,OACE,oCACE,yBAAKE,UAAU,OACZ7B,KAAKf,MAAM0C,SAEV,4BACEjB,KAAK,SACLmB,UAAU,MACVlB,QAASX,KAAK4B,UAHhB,UAWH5B,KAAKf,MAAMyC,MAEV,6BACE,kBAAC,EAAD,CAAOxC,MAAOc,KAAKf,MAAMgB,kB,GAlCnBqB,IAAMC,WCbxBO,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f95dbfd1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Goods extends React.Component {\n  state = {\n    goods: [...this.props.goods],\n    isReversed: false,\n    isSorted: '',\n    goodLength: 1,\n  };\n\n  reversed = () => {\n    this.setState(prev => ({\n      isReversed: !prev.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState(prev => ({\n      isSorted: 'alphabet',\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState({\n      isSorted: 'length',\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      isSorted: '',\n      goodLength: 1,\n    });\n  };\n\n  changeList = ({ target }) => {\n    this.setState({\n      goodLength: target.value,\n    });\n  }\n\n  render() {\n    const { goods, isReversed, isSorted, goodLength } = this.state;\n    const goodsList = goods.filter(good => good.length >= goodLength);\n\n    goodsList.sort((first, second) => {\n      switch (isSorted) {\n        case 'alphabet':\n          return first.localeCompare(second);\n        case 'length':\n          return first.length - second.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      goodsList.reverse();\n    }\n\n    return (\n      <>\n        <button\n          type=\"button\"\n          onClick={this.reversed}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.reset}\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortByLength}\n        >\n          Sort by length\n        </button>\n        <select\n          value={goodLength}\n          onChange={this.changeList}\n        >\n          {Array(10).fill(0).map((x, i) => (\n            <option\n              key={Math.floor(Math.random() * 100000)}\n              value={i + 1}\n            >\n              {i + 1}\n            </option>\n          ))}\n        </select>\n        <ul>\n          {goodsList.map(good => (\n            <li key={good}>{good}</li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nGoods.propTypes = {\n  goods: PropTypes.arrayOf({\n    good: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Goods } from './Goods';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goodsList: [...goodsFromServer],\n    show: false,\n    showBtn: true,\n  }\n\n  showList = () => {\n    this.setState(prev => ({\n      show: !prev.show,\n      showBtn: false,\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          {this.state.showBtn\n            && (\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={this.showList}\n            >\n              Start\n            </button>\n            )\n          }\n        </div>\n\n        {this.state.show\n          && (\n          <div>\n            <Goods goods={this.state.goodsList} />\n          </div>\n          )\n        }\n\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}